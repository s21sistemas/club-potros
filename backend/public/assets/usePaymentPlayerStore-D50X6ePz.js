import{o as y,h as b,e as g,i as h,u as P,k as I,d as q,f as w,t as l}from"./index-Bo_1Zqy6.js";import{d as f}from"./dayjs.min-C6mA835O.js";import{c as p}from"./caja-BNiab2HZ.js";const j=q(g,"pagos_jugadores"),D=async i=>{try{return(await I(j,i)).id}catch(o){console.error("Error al agregar pago:",o)}},F=async i=>y(j,o=>{const a=o.docs.map(n=>{var s,d,t,_,m;const e=n.data(),r=e.pagos||[];return{id:n.id,jugador:{value:e.jugadorId,label:e.nombre},prorroga:(s=r.find(c=>c.tipo==="Inscripción"))==null?void 0:s.prorroga,fecha_limite:(d=r.find(c=>c.tipo==="Inscripción"))==null?void 0:d.fecha_limite,inscripcion:(t=r.find(c=>c.tipo==="Inscripción"))==null?void 0:t.estatus,pesaje:(_=r.find(c=>c.tipo==="Pesaje"))==null?void 0:_.estatus,equipamiento:(m=r.find(c=>c.tipo==="Equipamiento"))==null?void 0:m.estatus,...n.data()}});i(a)}),A=async(i,o)=>{try{const a=o.pagos.find(t=>t.tipo==="Inscripción"),n=o.pagos.find(t=>t.tipo==="Pesaje"),e=o.pagos.find(t=>t.tipo==="Equipamiento");if(a.abono==="SI"){Array.isArray(a.abonos)||(a.abonos=[]),a.abonos.push({cantidad:o.cantidad_abono_ins,fecha:o.fecha_abono_ins,metodo:o.metodo_pago_abono_ins}),a.total_abonado=parseFloat(o.cantidad_abono_ins)+parseFloat(a.total_abonado||0),a.abono="NO";const t={jugadorId:o.jugadorId,nombre:o.nombre,tabla:"Jugador",concepto:"Pago de inscripción (abono)",fecha_pago:o.fecha_abono_ins||s,total:o.cantidad_abono_ins||0,metodo_pago:o.metodo_pago_abono_ins||null};await p(t)}if(n.abono==="SI"){Array.isArray(n.abonos)||(n.abonos=[]),n.abonos.push({cantidad:o.cantidad_abono_pesaje,fecha:o.fecha_abono_pesaje,metodo:o.metodo_pago_abono_pesaje}),n.total_abonado=parseFloat(o.cantidad_abono_pesaje)+parseFloat(n.total_abonado||0),n.abono="NO";const t={jugadorId:o.jugadorId,nombre:o.nombre,tabla:"Jugador",concepto:"Pago de pesaje (abono)",fecha_pago:o.fecha_abono_pesaje||s,total:o.cantidad_abono_pesaje||0,metodo_pago:o.metodo_pago_abono_pesaje||null};await p(t)}if(e.abono==="SI"){Array.isArray(e.abonos)||(e.abonos=[]),e.abonos.push({cantidad:o.cantidad_abono_equipamiento,fecha:o.fecha_abono_equipamiento,metodo:o.metodo_pago_abono_equipamiento}),e.total_abonado=parseFloat(o.cantidad_abono_equipamiento)+parseFloat(e.total_abonado||0),e.abono="NO";const t={jugadorId:o.jugadorId,nombre:o.nombre,tabla:"Jugador",concepto:"Pago de equipamiento (abono)",fecha_pago:o.fecha_abono_equipamiento||s,total:o.cantidad_abono_equipamiento||0,metodo_pago:o.metodo_pago_abono_equipamiento||null};await p(t)}const r={...o,pagos:o.pagos.map(t=>({...t}))},s=f().format("YYYY-MM-DD");if(a.estatus==="pagado"){const t={jugadorId:r.jugadorId,nombre:r.nombre,tabla:"Jugador",concepto:"Pago de inscripción",fecha_pago:a.fecha_pago||s,total:a.monto||0,metodo_pago:a.metodo_pago||null};await p(t)}if(n.estatus==="pagado"){const t={jugadorId:r.jugadorId,nombre:r.nombre,tabla:"Jugador",concepto:"Pago de pesaje",fecha_pago:n.fecha_pago||s,total:n.monto||0,metodo_pago:n.metodo_pago||null};await p(t)}if(e.estatus==="pagado"){const t={jugadorId:r.jugadorId,nombre:r.nombre,tabla:"Jugador",concepto:"Pago de equipamiento",fecha_pago:e.fecha_pago||s,total:e.monto||0,metodo_pago:e.metodo_pago||null};await p(t)}delete o.jugador,delete o.equipamiento,delete o.inscripcion,delete o.prorroga,delete o.pesaje,delete o.fecha_limite,delete o.cantidad_abono_ins,delete o.fecha_abono_ins,delete o.metodo_pago_abono_ins,delete o.cantidad_abono_equipamiento,delete o.fecha_abono_equipamiento,delete o.metodo_pago_abono_equipamiento,delete o.cantidad_abono_pesaje,delete o.fecha_abono_pesaje,delete o.metodo_pago_abono_pesaje;const d=b(g,"pagos_jugadores",i);await P(d,o)}catch(a){console.error("Error al actualizar pago:",a)}},E=async i=>{try{const o=b(g,"pagos_jugadores",i);await h(o)}catch(o){console.error("Error al eliminar pago:",o)}};let u=null;const R=w((i,o)=>({payments:[],loading:!1,getDataPaymentsPlayer:async()=>(i({loading:!0}),new Promise((a,n)=>{try{u?a(o().payments):u=F(e=>{i({payments:e}),a(e)})}catch(e){console.error(e),n(e)}finally{i({loading:!1})}})),addPayment:async a=>{const n=async()=>{try{const r=f().add(1,"week").format("YYYY/MM/DD");a.pagos[0].fecha_limite=r,a.jugadorId=a.jugador.value,a.nombre=a.jugador.label,delete a.jugador,await D(a)}catch(e){console.error(e)}};l.promise(n(),{loading:"Creando registro...",success:"Registro creado correctamente",error:"Falló al crear el registro."})},editPayment:async a=>{const n=async()=>{try{await A(a.id,a)}catch(e){console.error(e)}};l.promise(n(),{loading:"Actualizando...",success:"Actualizado correctamente",error:"Falló al eliminar."})},deletePayment:async a=>{const n=async()=>{try{await E(a)}catch(e){console.error(e)}};l.promise(n(),{loading:"Eliminando...",success:"Eliminado correctamente",error:"Falló al eliminar."})}}));export{R as u};
